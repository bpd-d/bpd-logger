{"version":3,"sources":["webpack://bpd-logger/webpack/universalModuleDefinition","webpack://bpd-logger/webpack/bootstrap","webpack://bpd-logger/./src/logger.ts"],"names":[],"mappings":"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","file":"logger.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpd-logger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpd-logger\"] = factory();\n\telse\n\t\troot[\"bpd-logger\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","interface LoggerCache {\r\n    [id: string]: BpdModuleLoggerBase;\r\n}\r\n\r\ninterface LogCallback {\r\n    (level: BpdLogLevel, data: LogDetails): void;\r\n}\r\n\r\nexport type BpdLogLevel = \"DEBUG\" | \"INFO\" | \"WARNING\" | \"ERROR\" | \"EXCEPTION\";\r\n\r\nexport interface BpdLoggerSetup {\r\n    level: BpdLogLevel;\r\n    plugins: IBpdLoggerPlugin[];\r\n    manager?: IBpdPluginManager;\r\n}\r\n\r\nexport interface LogDetails {\r\n    message: string;\r\n    date: Date;\r\n    error?: Error;\r\n    function?: string;\r\n    id?: string;\r\n    module?: string;\r\n}\r\n\r\nexport abstract class BpdModuleLoggerBase {\r\n    #module: string;\r\n    manager: IBpdPluginManager;\r\n    constructor(module: string, manager: IBpdPluginManager) {\r\n        this.#module = module;\r\n        this.manager = manager;\r\n    }\r\n\r\n    protected log(level: BpdLogLevel, id: string, message: string, functionName: string | undefined, error?: Error | undefined) {\r\n        this.manager.onLog(level, {\r\n            message: message,\r\n            date: new Date(),\r\n            function: functionName,\r\n            id: id,\r\n            error: error,\r\n            module: this.#module\r\n        });\r\n    }\r\n\r\n    abstract debug(message: string, functionName?: string): void;\r\n    abstract error(message: string, functionName?: string): void;\r\n    abstract warning(message: string, functionName?: string): void;\r\n    abstract exception(e: Error, message: string, functionName?: string): void;\r\n    abstract info(message: string, functionName?: string): void;\r\n    abstract setId(id: string): void;\r\n}\r\n\r\nexport class BpdModuleLogger extends BpdModuleLoggerBase {\r\n    #id: string;\r\n    constructor(module: string, manager: IBpdPluginManager) {\r\n        super(module, manager);\r\n        this.#id = \"-\";\r\n    }\r\n\r\n    debug(message: string, functionName?: string): void {\r\n        this.log(\"DEBUG\", this.#id, message, functionName)\r\n    }\r\n\r\n    error(message: string, functionName?: string): void {\r\n        this.log(\"ERROR\", this.#id, message, functionName)\r\n    }\r\n\r\n    warning(message: string, functionName?: string): void {\r\n        this.log(\"WARNING\", this.#id, message, functionName)\r\n    }\r\n\r\n    info(message: string, functionName?: string): void {\r\n        this.log(\"INFO\", this.#id, message, functionName)\r\n    }\r\n\r\n    exception(e: Error, message: string, functionName?: string): void {\r\n        this.log(\"EXCEPTION\", this.#id, message, functionName, e);\r\n    }\r\n\r\n    setId(id: string): void {\r\n        this.#id = id;\r\n    }\r\n}\r\n\r\nexport interface IBpdPluginManager {\r\n    onLog: LogCallback;\r\n    setPlugins(plugins: IBpdLoggerPlugin[]): void;\r\n}\r\n\r\n\r\nexport interface IBpdLoggerPlugin {\r\n    log: LogCallback;\r\n}\r\n\r\nexport class BpdLogger {\r\n    #level: BpdLogLevel;\r\n    #cache: LoggerCache;\r\n    #manager: IBpdPluginManager;\r\n    #plugins: IBpdLoggerPlugin[];\r\n    constructor(setup?: BpdLoggerSetup) {\r\n        this.#manager = new PluginsManager(\"ERROR\");\r\n        this.#plugins = [];\r\n        this.#level = \"ERROR\";\r\n        this.setSetup(setup);\r\n        this.#cache = {};\r\n        this.#manager.setPlugins(this.#plugins);\r\n\r\n    }\r\n\r\n    get(module: string): BpdModuleLoggerBase {\r\n        if (!module || module === null && module === \"\") {\r\n            throw new Error(\"Module name has not been provided\");\r\n        }\r\n        let moduleLogger = this.#cache[module];\r\n        if (!moduleLogger) {\r\n            moduleLogger = new BpdModuleLogger(module, this.#manager);\r\n            this.#cache[module] = moduleLogger;\r\n        }\r\n        return moduleLogger;\r\n    }\r\n\r\n    private setSetup(setup?: BpdLoggerSetup) {\r\n        if (setup && setup !== null) {\r\n            this.#level = setup.level ?? \"ERROR\";\r\n            this.#plugins = setup.plugins ?? [];\r\n            this.#manager = setup.manager ?? new PluginsManager(this.#level);\r\n        }\r\n    }\r\n}\r\n\r\nexport class PluginsManager implements IBpdPluginManager {\r\n    #plugins: IBpdLoggerPlugin[];\r\n    #level: BpdLogLevel;\r\n    constructor(level: BpdLogLevel) {\r\n        this.#plugins = [];\r\n        this.#level = level;\r\n    }\r\n\r\n    setPlugins(plugins: IBpdLoggerPlugin[]) {\r\n        this.#plugins = plugins ?? [];\r\n    }\r\n\r\n    onLog(level: BpdLogLevel, data: LogDetails) {\r\n        if (!this.levelMatch(level)) {\r\n            return;\r\n        }\r\n        this.#plugins.forEach(plugin => {\r\n            plugin.log(level, data);\r\n        })\r\n    }\r\n\r\n    private levelMatch(level: BpdLogLevel): boolean {\r\n        if (this.#plugins.length === 0) {\r\n            return false;\r\n        }\r\n        if (this.#level === \"DEBUG\" || this.#level === level) {\r\n            return true;\r\n        }\r\n        switch (this.#level) {\r\n            case \"INFO\":\r\n                return level !== \"DEBUG\";\r\n            case \"WARNING\":\r\n                return ![\"DEBUG\", \"INFO\"].includes(level);\r\n            case \"ERROR\":\r\n                return [\"ERROR\", \"EXCEPTION\"].includes(level)\r\n            case \"EXCEPTION\":\r\n                return level === 'EXCEPTION';\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n}"],"sourceRoot":""}