{"version":3,"sources":["webpack://bpd-logger/webpack/universalModuleDefinition","webpack://bpd-logger/webpack/bootstrap","webpack://bpd-logger/./src/logger.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BpdModuleLoggerBase","manager","this","level","id","message","functionName","error","onLog","date","Date","function","BpdModuleLogger","super","log","e","BpdLogger","setup","PluginsManager","setSetup","setPlugins","Error","moduleLogger","plugins","data","levelMatch","forEach","plugin","length","includes"],"mappings":"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","file":"logger.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpd-logger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpd-logger\"] = factory();\n\telse\n\t\troot[\"bpd-logger\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","interface LoggerCache {\r\n    [id: string]: BpdModuleLoggerBase;\r\n}\r\n\r\ninterface LogCallback {\r\n    (level: BpdLogLevel, data: LogDetails): void;\r\n}\r\n\r\nexport type BpdLogLevel = \"DEBUG\" | \"INFO\" | \"WARNING\" | \"ERROR\" | \"EXCEPTION\";\r\n\r\nexport interface BpdLoggerSetup {\r\n    level: BpdLogLevel;\r\n    plugins: IBpdLoggerPlugin[];\r\n    manager?: IBpdPluginManager;\r\n}\r\n\r\nexport interface LogDetails {\r\n    message: string;\r\n    date: Date;\r\n    error?: Error;\r\n    function?: string;\r\n    id?: string;\r\n    module?: string;\r\n}\r\n\r\nexport abstract class BpdModuleLoggerBase {\r\n    #module: string;\r\n    manager: IBpdPluginManager;\r\n    constructor(module: string, manager: IBpdPluginManager) {\r\n        this.#module = module;\r\n        this.manager = manager;\r\n    }\r\n\r\n    protected log(level: BpdLogLevel, id: string, message: string, functionName: string | undefined, error?: Error | undefined) {\r\n        this.manager.onLog(level, {\r\n            message: message,\r\n            date: new Date(),\r\n            function: functionName,\r\n            id: id,\r\n            error: error,\r\n            module: this.#module\r\n        });\r\n    }\r\n\r\n    abstract debug(message: string, functionName?: string): void;\r\n    abstract error(message: string, functionName?: string): void;\r\n    abstract warning(message: string, functionName?: string): void;\r\n    abstract exception(e: Error, message: string, functionName?: string): void;\r\n    abstract info(message: string, functionName?: string): void;\r\n    abstract setId(id: string): void;\r\n}\r\n\r\nexport class BpdModuleLogger extends BpdModuleLoggerBase {\r\n    #id: string;\r\n    constructor(module: string, manager: IBpdPluginManager) {\r\n        super(module, manager);\r\n        this.#id = \"-\";\r\n    }\r\n\r\n    debug(message: string, functionName?: string): void {\r\n        this.log(\"DEBUG\", this.#id, message, functionName)\r\n    }\r\n\r\n    error(message: string, functionName?: string): void {\r\n        this.log(\"ERROR\", this.#id, message, functionName)\r\n    }\r\n\r\n    warning(message: string, functionName?: string): void {\r\n        this.log(\"WARNING\", this.#id, message, functionName)\r\n    }\r\n\r\n    info(message: string, functionName?: string): void {\r\n        this.log(\"INFO\", this.#id, message, functionName)\r\n    }\r\n\r\n    exception(e: Error, message: string, functionName?: string): void {\r\n        this.log(\"EXCEPTION\", this.#id, message, functionName, e);\r\n    }\r\n\r\n    setId(id: string): void {\r\n        this.#id = id;\r\n    }\r\n}\r\n\r\nexport interface IBpdPluginManager {\r\n    onLog: LogCallback;\r\n    setPlugins(plugins: IBpdLoggerPlugin[]): void;\r\n}\r\n\r\n\r\nexport interface IBpdLoggerPlugin {\r\n    log: LogCallback;\r\n}\r\n\r\nexport class BpdLogger {\r\n    #level: BpdLogLevel;\r\n    #cache: LoggerCache;\r\n    #manager: IBpdPluginManager;\r\n    #plugins: IBpdLoggerPlugin[];\r\n    constructor(setup?: BpdLoggerSetup) {\r\n        this.#manager = new PluginsManager(\"ERROR\");\r\n        this.#plugins = [];\r\n        this.#level = \"ERROR\";\r\n        this.setSetup(setup);\r\n        this.#cache = {};\r\n        this.#manager.setPlugins(this.#plugins);\r\n\r\n    }\r\n\r\n    get(module: string): BpdModuleLoggerBase {\r\n        if (!module || module === null && module === \"\") {\r\n            throw new Error(\"Module name has not been provided\");\r\n        }\r\n        let moduleLogger = this.#cache[module];\r\n        if (!moduleLogger) {\r\n            moduleLogger = new BpdModuleLogger(module, this.#manager);\r\n            this.#cache[module] = moduleLogger;\r\n        }\r\n        return moduleLogger;\r\n    }\r\n\r\n    private setSetup(setup?: BpdLoggerSetup) {\r\n        if (setup && setup !== null) {\r\n            this.#level = setup.level ?? \"ERROR\";\r\n            this.#plugins = setup.plugins ?? [];\r\n            this.#manager = setup.manager ?? new PluginsManager(this.#level);\r\n        }\r\n    }\r\n}\r\n\r\nexport class PluginsManager implements IBpdPluginManager {\r\n    #plugins: IBpdLoggerPlugin[];\r\n    #level: BpdLogLevel;\r\n    constructor(level: BpdLogLevel) {\r\n        this.#plugins = [];\r\n        this.#level = level;\r\n    }\r\n\r\n    setPlugins(plugins: IBpdLoggerPlugin[]) {\r\n        this.#plugins = plugins ?? [];\r\n    }\r\n\r\n    onLog(level: BpdLogLevel, data: LogDetails) {\r\n        if (!this.levelMatch(level)) {\r\n            return;\r\n        }\r\n        this.#plugins.forEach(plugin => {\r\n            plugin.log(level, data);\r\n        })\r\n    }\r\n\r\n    private levelMatch(level: BpdLogLevel): boolean {\r\n        if (this.#plugins.length === 0) {\r\n            return false;\r\n        }\r\n        if (this.#level === \"DEBUG\" || this.#level === level) {\r\n            return true;\r\n        }\r\n        switch (this.#level) {\r\n            case \"INFO\":\r\n                return level !== \"DEBUG\";\r\n            case \"WARNING\":\r\n                return ![\"DEBUG\", \"INFO\"].includes(level);\r\n            case \"ERROR\":\r\n                return [\"ERROR\", \"EXCEPTION\"].includes(level)\r\n            case \"EXCEPTION\":\r\n                return level === 'EXCEPTION';\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n}"],"sourceRoot":""}